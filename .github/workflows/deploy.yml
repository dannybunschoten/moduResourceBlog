name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Setup SSH and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: "root"
          VPS_HOST: "blog.dannybunschoten.com"
          REMOTE_PATH: "/var/www/blog"

        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add VPS to known hosts
          ssh-keyscan -H $VPS_HOST >> ~/.ssh/known_hosts

          # Remove old files (but keep the directory itself)
          ssh $VPS_USER@$VPS_HOST "rm -rf $REMOTE_PATH/*"

          # Copy new build files directly into /var/www/pwa/
          scp -r dist/* $VPS_USER@$VPS_HOST:$REMOTE_PATH/

          # Set correct ownership & permissions (VERY IMPORTANT)
          ssh $VPS_USER@$VPS_HOST "chown -R www-data:www-data $REMOTE_PATH && chmod -R 755 $REMOTE_PATH"
  deployv2:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get Build Results
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Deploy To Azure
        run: |
          az storage blob upload-batch \
            --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
            --destination '$web/modu-blog' \
            --source ./dist \
            --overwrite
        env:
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
